(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[0],{

/***/ "./crate/pkg/sandtable.js":
/*!********************************!*\
  !*** ./crate/pkg/sandtable.js ***!
  \********************************/
/*! exports provided: Species, __wbg_random_550c16f4bb1e60f5, Cell, Universe, Wind, __wbindgen_throw */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Species\", function() { return Species; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_random_550c16f4bb1e60f5\", function() { return __wbg_random_550c16f4bb1e60f5; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Cell\", function() { return Cell; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Universe\", function() { return Universe; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Wind\", function() { return Wind; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_throw\", function() { return __wbindgen_throw; });\n/* harmony import */ var _sandtable_bg__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sandtable_bg */ \"./crate/pkg/sandtable_bg.wasm\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/* tslint:disable */\n\n/**\n*/\n\nvar Species = Object.freeze({\n  Empty: 0,\n  Wall: 1,\n  Powder: 2,\n  Water: 3,\n  Gas: 4,\n  Clone: 5,\n  Fire: 6,\n  Wood: 7,\n  Lava: 8,\n  Ice: 9,\n  Sink: 10,\n  Plant: 11,\n  Acid: 12,\n  Stone: 13,\n  Dust: 14,\n  Mite: 15\n});\n\nfunction _assertNum(n) {\n  if (typeof n !== 'number') throw new Error('expected a number argument');\n}\n\nfunction __wbg_random_550c16f4bb1e60f5() {\n  return Math.random();\n}\n\nfunction freeCell(ptr) {\n  _sandtable_bg__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_cell_free\"](ptr);\n}\n/**\n*/\n\n\nvar Cell =\n/*#__PURE__*/\nfunction () {\n  function Cell() {\n    _classCallCheck(this, Cell);\n\n    throw new Error('cannot invoke `new` directly');\n  }\n\n  _createClass(Cell, [{\n    key: \"free\",\n    value: function free() {\n      var ptr = this.ptr;\n      this.ptr = 0;\n      freeCell(ptr);\n    }\n  }]);\n\n  return Cell;\n}();\n\nfunction freeUniverse(ptr) {\n  _sandtable_bg__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_universe_free\"](ptr);\n}\n/**\n*/\n\n\nvar Universe =\n/*#__PURE__*/\nfunction () {\n  function Universe() {\n    _classCallCheck(this, Universe);\n\n    throw new Error('cannot invoke `new` directly');\n  }\n\n  _createClass(Universe, [{\n    key: \"free\",\n    value: function free() {\n      var ptr = this.ptr;\n      this.ptr = 0;\n      freeUniverse(ptr);\n    }\n    /**\n    * @returns {void}\n    */\n\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      if (this.ptr === 0) {\n        throw new Error('Attempt to use a moved value');\n      }\n\n      return _sandtable_bg__WEBPACK_IMPORTED_MODULE_0__[\"universe_reset\"](this.ptr);\n    }\n    /**\n    * @returns {void}\n    */\n\n  }, {\n    key: \"tick\",\n    value: function tick() {\n      if (this.ptr === 0) {\n        throw new Error('Attempt to use a moved value');\n      }\n\n      return _sandtable_bg__WEBPACK_IMPORTED_MODULE_0__[\"universe_tick\"](this.ptr);\n    }\n    /**\n    * @returns {number}\n    */\n\n  }, {\n    key: \"width\",\n    value: function width() {\n      if (this.ptr === 0) {\n        throw new Error('Attempt to use a moved value');\n      }\n\n      return _sandtable_bg__WEBPACK_IMPORTED_MODULE_0__[\"universe_width\"](this.ptr);\n    }\n    /**\n    * @returns {number}\n    */\n\n  }, {\n    key: \"height\",\n    value: function height() {\n      if (this.ptr === 0) {\n        throw new Error('Attempt to use a moved value');\n      }\n\n      return _sandtable_bg__WEBPACK_IMPORTED_MODULE_0__[\"universe_height\"](this.ptr);\n    }\n    /**\n    * @returns {number}\n    */\n\n  }, {\n    key: \"cells\",\n    value: function cells() {\n      if (this.ptr === 0) {\n        throw new Error('Attempt to use a moved value');\n      }\n\n      return _sandtable_bg__WEBPACK_IMPORTED_MODULE_0__[\"universe_cells\"](this.ptr);\n    }\n    /**\n    * @returns {number}\n    */\n\n  }, {\n    key: \"winds\",\n    value: function winds() {\n      if (this.ptr === 0) {\n        throw new Error('Attempt to use a moved value');\n      }\n\n      return _sandtable_bg__WEBPACK_IMPORTED_MODULE_0__[\"universe_winds\"](this.ptr);\n    }\n    /**\n    * @returns {number}\n    */\n\n  }, {\n    key: \"burns\",\n    value: function burns() {\n      if (this.ptr === 0) {\n        throw new Error('Attempt to use a moved value');\n      }\n\n      return _sandtable_bg__WEBPACK_IMPORTED_MODULE_0__[\"universe_burns\"](this.ptr);\n    }\n    /**\n    * @param {number} arg0\n    * @param {number} arg1\n    * @param {number} arg2\n    * @param {number} arg3\n    * @returns {void}\n    */\n\n  }, {\n    key: \"paint\",\n    value: function paint(arg0, arg1, arg2, arg3) {\n      if (this.ptr === 0) {\n        throw new Error('Attempt to use a moved value');\n      }\n\n      _assertNum(arg0);\n\n      _assertNum(arg1);\n\n      _assertNum(arg2);\n\n      _assertNum(arg3);\n\n      return _sandtable_bg__WEBPACK_IMPORTED_MODULE_0__[\"universe_paint\"](this.ptr, arg0, arg1, arg2, arg3);\n    }\n    /**\n    * @param {number} arg0\n    * @param {number} arg1\n    * @returns {Universe}\n    */\n\n  }], [{\n    key: \"__wrap\",\n    value: function __wrap(ptr) {\n      var obj = Object.create(Universe.prototype);\n      obj.ptr = ptr;\n      return obj;\n    }\n  }, {\n    key: \"new\",\n    value: function _new(arg0, arg1) {\n      _assertNum(arg0);\n\n      _assertNum(arg1);\n\n      return Universe.__wrap(_sandtable_bg__WEBPACK_IMPORTED_MODULE_0__[\"universe_new\"](arg0, arg1));\n    }\n  }]);\n\n  return Universe;\n}();\n\nfunction freeWind(ptr) {\n  _sandtable_bg__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_wind_free\"](ptr);\n}\n/**\n*/\n\n\nvar Wind =\n/*#__PURE__*/\nfunction () {\n  function Wind() {\n    _classCallCheck(this, Wind);\n\n    throw new Error('cannot invoke `new` directly');\n  }\n\n  _createClass(Wind, [{\n    key: \"free\",\n    value: function free() {\n      var ptr = this.ptr;\n      this.ptr = 0;\n      freeWind(ptr);\n    }\n  }]);\n\n  return Wind;\n}();\nvar cachedTextDecoder = new TextDecoder('utf-8');\nvar cachegetUint8Memory = null;\n\nfunction getUint8Memory() {\n  if (cachegetUint8Memory === null || cachegetUint8Memory.buffer !== _sandtable_bg__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer) {\n    cachegetUint8Memory = new Uint8Array(_sandtable_bg__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer);\n  }\n\n  return cachegetUint8Memory;\n}\n\nfunction getStringFromWasm(ptr, len) {\n  return cachedTextDecoder.decode(getUint8Memory().subarray(ptr, ptr + len));\n}\n\nfunction __wbindgen_throw(ptr, len) {\n  throw new Error(getStringFromWasm(ptr, len));\n}\n\n//# sourceURL=webpack:///./crate/pkg/sandtable.js?");

/***/ }),

/***/ "./crate/pkg/sandtable_bg.wasm":
/*!*************************************!*\
  !*** ./crate/pkg/sandtable_bg.wasm ***!
  \*************************************/
/*! exports provided: memory, __rustc_debug_gdb_scripts_section__, __wbg_wind_free, __wbg_cell_free, __wbg_universe_free, universe_reset, universe_tick, universe_width, universe_height, universe_cells, universe_winds, universe_burns, universe_paint, universe_new */
/***/ (function(module, exports, __webpack_require__) {

eval("\"use strict\";\n// Instantiate WebAssembly module\nvar wasmExports = __webpack_require__.w[module.i];\n__webpack_require__.r(exports);\n// export exports from WebAssembly module\nfor(var name in wasmExports) if(name != \"__webpack_init__\") exports[name] = wasmExports[name];\n// exec imports from WebAssembly module (for esm order)\n/* harmony import */ var m0 = __webpack_require__(/*! ./sandtable */ \"./crate/pkg/sandtable.js\");\n\n\n// exec wasm module\nwasmExports[\"__webpack_init__\"]()\n\n//# sourceURL=webpack:///./crate/pkg/sandtable_bg.wasm?");

/***/ }),

/***/ "./js/constants.js":
/*!*************************!*\
  !*** ./js/constants.js ***!
  \*************************/
/*! exports provided: ratio */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ratio\", function() { return ratio; });\nvar ratio = 4;\n\nif (window.devicePixelRatio > 1) {\n  ratio = 3;\n}\n\n\n\n//# sourceURL=webpack:///./js/constants.js?");

/***/ }),

/***/ "./js/fluid.js":
/*!*********************!*\
  !*** ./js/fluid.js ***!
  \*********************/
/*! exports provided: startFluid */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"startFluid\", function() { return startFluid; });\n/* harmony import */ var dat_gui__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! dat.gui */ \"./node_modules/dat.gui/build/dat.gui.module.js\");\n/* harmony import */ var _crate_pkg_sandtable_bg__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../crate/pkg/sandtable_bg */ \"./crate/pkg/sandtable_bg.wasm\");\n/* harmony import */ var _fluidShaders__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./fluidShaders */ \"./js/fluidShaders.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./constants */ \"./js/constants.js\");\n// MIT License\n// Copyright (c) 2017 Pavel Dobryakov\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\n\nvar canvas = document.getElementById(\"fluid-canvas\");\nvar sandCanvas = document.getElementById(\"sand-canvas\");\nvar fluidColor = [1, 1, 0.8];\n\nfunction startFluid(_ref) {\n  var universe = _ref.universe;\n  canvas.width = universe.width();\n  canvas.height = universe.height();\n  var config = {\n    TEXTURE_DOWNSAMPLE: 0,\n    DENSITY_DISSIPATION: 0.98,\n    VELOCITY_DISSIPATION: 0.99,\n    PRESSURE_DISSIPATION: 0.8,\n    PRESSURE_ITERATIONS: 25,\n    CURL: 30,\n    SPLAT_RADIUS: 0.005\n  };\n  var pointers = [];\n  var splatStack = [];\n\n  var _getWebGLContext = getWebGLContext(canvas),\n      gl = _getWebGLContext.gl,\n      ext = _getWebGLContext.ext;\n\n  var _compileShaders = Object(_fluidShaders__WEBPACK_IMPORTED_MODULE_2__[\"compileShaders\"])(gl),\n      baseVertexShader = _compileShaders.baseVertexShader,\n      clearShader = _compileShaders.clearShader,\n      displayShader = _compileShaders.displayShader,\n      splatShader = _compileShaders.splatShader,\n      advectionManualFilteringShader = _compileShaders.advectionManualFilteringShader,\n      advectionShader = _compileShaders.advectionShader,\n      divergenceShader = _compileShaders.divergenceShader,\n      curlShader = _compileShaders.curlShader,\n      vorticityShader = _compileShaders.vorticityShader,\n      pressureShader = _compileShaders.pressureShader,\n      gradientSubtractShader = _compileShaders.gradientSubtractShader,\n      velocityOutShader = _compileShaders.velocityOutShader;\n\n  startGUI();\n\n  function getWebGLContext(canvas) {\n    var params = {\n      alpha: false,\n      depth: false,\n      stencil: false,\n      antialias: false,\n      preserveDrawingBuffer: false\n    };\n    var gl = canvas.getContext(\"webgl2\", params);\n    var isWebGL2 = !!gl;\n    if (!isWebGL2) gl = canvas.getContext(\"webgl\", params) || canvas.getContext(\"experimental-webgl\", params);\n    var halfFloat;\n    var supportLinearFiltering;\n\n    if (isWebGL2) {\n      gl.getExtension(\"EXT_color_buffer_float\");\n      supportLinearFiltering = gl.getExtension(\"OES_texture_float_linear\");\n    } else {\n      halfFloat = gl.getExtension(\"OES_texture_half_float\");\n      supportLinearFiltering = gl.getExtension(\"OES_texture_half_float_linear\");\n    }\n\n    gl.clearColor(0.0, 0.0, 0.0, 0.0);\n    var halfFloatTexType = isWebGL2 ? gl.HALF_FLOAT : halfFloat.HALF_FLOAT_OES;\n    var formatRGBA;\n    var formatRG;\n    var formatR;\n\n    if (isWebGL2) {\n      formatRGBA = getSupportedFormat(gl, gl.RGBA16F, gl.RGBA, halfFloatTexType);\n      formatRG = getSupportedFormat(gl, gl.RG16F, gl.RG, halfFloatTexType);\n      formatR = getSupportedFormat(gl, gl.R16F, gl.RED, halfFloatTexType);\n    } else {\n      formatRGBA = getSupportedFormat(gl, gl.RGBA, gl.RGBA, halfFloatTexType);\n      formatRG = getSupportedFormat(gl, gl.RGBA, gl.RGBA, halfFloatTexType);\n      formatR = getSupportedFormat(gl, gl.RGBA, gl.RGBA, halfFloatTexType);\n    }\n\n    return {\n      gl: gl,\n      ext: {\n        formatRGBA: formatRGBA,\n        formatRG: formatRG,\n        formatR: formatR,\n        halfFloatTexType: halfFloatTexType,\n        supportLinearFiltering: supportLinearFiltering\n      }\n    };\n  }\n\n  function getSupportedFormat(gl, internalFormat, format, type) {\n    if (!supportRenderTextureFormat(gl, internalFormat, format, type)) {\n      switch (internalFormat) {\n        case gl.R16F:\n          return getSupportedFormat(gl, gl.RG16F, gl.RG, type);\n\n        case gl.RG16F:\n          return getSupportedFormat(gl, gl.RGBA16F, gl.RGBA, type);\n\n        default:\n          return null;\n      }\n    }\n\n    return {\n      internalFormat: internalFormat,\n      format: format\n    };\n  }\n\n  function supportRenderTextureFormat(gl, internalFormat, format, type) {\n    var texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texImage2D(gl.TEXTURE_2D, 0, internalFormat, 4, 4, 0, format, type, null);\n    var fbo = gl.createFramebuffer();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, fbo);\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n    var status = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n    if (status != gl.FRAMEBUFFER_COMPLETE) return false;\n    return true;\n  }\n\n  function startGUI() {\n    var gui = new dat_gui__WEBPACK_IMPORTED_MODULE_0__[\"GUI\"]({\n      width: 300\n    });\n    gui.add(config, \"TEXTURE_DOWNSAMPLE\", {\n      Full: 0,\n      Half: 1,\n      Quarter: 2\n    }).name(\"resolution\").onFinishChange(initFramebuffers);\n    gui.add(config, \"DENSITY_DISSIPATION\", 0.9, 1.0).name(\"density diffusion\");\n    gui.add(config, \"VELOCITY_DISSIPATION\", 0.9, 1.0).name(\"velocity diffusion\");\n    gui.add(config, \"PRESSURE_DISSIPATION\", 0.0, 1.0).name(\"pressure diffusion\");\n    gui.add(config, \"PRESSURE_ITERATIONS\", 1, 60).name(\"iterations\");\n    gui.add(config, \"CURL\", 0, 50).name(\"vorticity\").step(1);\n    gui.add(config, \"SPLAT_RADIUS\", 0.0001, 0.01).name(\"splat radius\");\n    gui.add({\n      fun: function fun() {\n        splatStack.push(parseInt(Math.random() * 20) + 5);\n      }\n    }, \"fun\").name(\"Random splats\");\n    gui.close();\n  }\n\n  function pointerPrototype() {\n    this.id = -1;\n    this.x = 0;\n    this.y = 0;\n    this.dx = 0;\n    this.dy = 0;\n    this.down = false;\n    this.moved = false;\n    this.color = [30, 300, 30];\n  }\n\n  pointers.push(new pointerPrototype());\n\n  var GLProgram =\n  /*#__PURE__*/\n  function () {\n    function GLProgram(vertexShader, fragmentShader) {\n      _classCallCheck(this, GLProgram);\n\n      this.uniforms = {};\n      this.program = gl.createProgram();\n      gl.attachShader(this.program, vertexShader);\n      gl.attachShader(this.program, fragmentShader);\n      gl.linkProgram(this.program);\n      if (!gl.getProgramParameter(this.program, gl.LINK_STATUS)) throw gl.getProgramInfoLog(this.program);\n      var uniformCount = gl.getProgramParameter(this.program, gl.ACTIVE_UNIFORMS);\n\n      for (var i = 0; i < uniformCount; i++) {\n        var uniformName = gl.getActiveUniform(this.program, i).name;\n        this.uniforms[uniformName] = gl.getUniformLocation(this.program, uniformName);\n      }\n    }\n\n    _createClass(GLProgram, [{\n      key: \"bind\",\n      value: function bind() {\n        gl.useProgram(this.program);\n      }\n    }]);\n\n    return GLProgram;\n  }();\n\n  var texWidth;\n  var texHeight;\n  var density;\n  var velocity;\n  var velocityOut;\n  var burns;\n  var divergence;\n  var curl;\n  var pressure;\n  initFramebuffers();\n  var clearProgram = new GLProgram(baseVertexShader, clearShader);\n  var displayProgram = new GLProgram(baseVertexShader, displayShader);\n  var velocityOutProgram = new GLProgram(baseVertexShader, velocityOutShader);\n  var splatProgram = new GLProgram(baseVertexShader, splatShader);\n  var advectionProgram = new GLProgram(baseVertexShader, ext.supportLinearFiltering ? advectionShader : advectionManualFilteringShader);\n  var divergenceProgram = new GLProgram(baseVertexShader, divergenceShader);\n  var curlProgram = new GLProgram(baseVertexShader, curlShader);\n  var vorticityProgram = new GLProgram(baseVertexShader, vorticityShader);\n  var pressureProgram = new GLProgram(baseVertexShader, pressureShader);\n  var gradientSubtractProgram = new GLProgram(baseVertexShader, gradientSubtractShader);\n\n  function initFramebuffers() {\n    texWidth = gl.drawingBufferWidth >> config.TEXTURE_DOWNSAMPLE;\n    texHeight = gl.drawingBufferHeight >> config.TEXTURE_DOWNSAMPLE;\n    var texType = ext.halfFloatTexType;\n    var rgba = ext.formatRGBA;\n    var rg = ext.formatRG;\n    var r = ext.formatR;\n    velocity = createDoubleFBO(0, texWidth, texHeight, rg.internalFormat, rg.format, texType, ext.supportLinearFiltering ? gl.LINEAR : gl.NEAREST);\n    density = createDoubleFBO(2, texWidth, texHeight, rgba.internalFormat, rgba.format, texType, ext.supportLinearFiltering ? gl.LINEAR : gl.NEAREST);\n    divergence = createFBO(4, texWidth, texHeight, r.internalFormat, r.format, texType, gl.NEAREST);\n    curl = createFBO(5, texWidth, texHeight, r.internalFormat, r.format, texType, gl.NEAREST);\n    pressure = createDoubleFBO(6, texWidth, texHeight, r.internalFormat, r.format, texType, gl.NEAREST);\n    burns = createFBO(8, texWidth, texHeight, rg.internalFormat, rg.format, texType, ext.supportLinearFiltering ? gl.LINEAR : gl.NEAREST);\n    velocityOut = createFBO(9, texWidth, texHeight, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, ext.supportLinearFiltering ? gl.LINEAR : gl.NEAREST);\n  }\n\n  function createFBO(texId, w, h, internalFormat, format, type, param) {\n    gl.activeTexture(gl.TEXTURE0 + texId);\n    var texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, param);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, param);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texImage2D(gl.TEXTURE_2D, 0, internalFormat, w, h, 0, format, type, null);\n    var fbo = gl.createFramebuffer();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, fbo);\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n    gl.viewport(0, 0, w, h);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    return [texture, fbo, texId];\n  }\n\n  function createDoubleFBO(texId, w, h, internalFormat, format, type, param) {\n    var fbo1 = createFBO(texId, w, h, internalFormat, format, type, param);\n    var fbo2 = createFBO(texId + 1, w, h, internalFormat, format, type, param);\n    return {\n      get read() {\n        return fbo1;\n      },\n\n      get write() {\n        return fbo2;\n      },\n\n      swap: function swap() {\n        var temp = fbo1;\n        fbo1 = fbo2;\n        fbo2 = temp;\n      }\n    };\n  }\n\n  var blit = function () {\n    gl.bindBuffer(gl.ARRAY_BUFFER, gl.createBuffer());\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([-1, -1, -1, 1, 1, 1, 1, -1]), gl.STATIC_DRAW);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, gl.createBuffer());\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array([0, 1, 2, 0, 2, 3]), gl.STATIC_DRAW);\n    gl.vertexAttribPointer(0, 2, gl.FLOAT, false, 0, 0);\n    gl.enableVertexAttribArray(0);\n    return function (destination) {\n      gl.bindFramebuffer(gl.FRAMEBUFFER, destination);\n      gl.drawElements(gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0);\n    };\n  }();\n\n  var lastTime = Date.now(); // multipleSplats(parseInt(Math.random() * 20) + 5);\n\n  var width = universe.width();\n  var height = universe.height();\n  var winds = new Uint8Array(_crate_pkg_sandtable_bg__WEBPACK_IMPORTED_MODULE_1__[\"memory\"].buffer, universe.winds(), width * height * 4);\n  var burnsData = new Uint8Array(_crate_pkg_sandtable_bg__WEBPACK_IMPORTED_MODULE_1__[\"memory\"].buffer, universe.burns(), width * height * 4);\n\n  function update() {\n    // resizeCanvas();\n    var dt = Math.min((Date.now() - lastTime) / 1000, 0.016);\n    lastTime = Date.now();\n    gl.viewport(0, 0, texWidth, texHeight);\n    if (splatStack.length > 0) multipleSplats(splatStack); // multipleSplats(1);\n    // ADVECTION\n    // velocityRead ->\n    // velocityWrite\n\n    advectionProgram.bind();\n    var texUnit = 0;\n    gl.activeTexture(gl.TEXTURE0 + texUnit);\n    gl.bindTexture(gl.TEXTURE_2D, velocity.read[0]);\n    gl.uniform1i(advectionProgram.uniforms.uVelocity, texUnit++);\n    gl.activeTexture(gl.TEXTURE0 + texUnit);\n    gl.bindTexture(gl.TEXTURE_2D, velocity.read[0]);\n    gl.uniform1i(advectionProgram.uniforms.uSource, texUnit++);\n    gl.uniform2f(advectionProgram.uniforms.texelSize, 1.0 / texWidth, 1.0 / texHeight); // gl.uniform1i(advectionProgram.uniforms.uVelocity, velocity.read[2]);\n    // gl.uniform1i(advectionProgram.uniforms.uSource, velocity.read[2]);\n\n    gl.uniform1f(advectionProgram.uniforms.dt, dt);\n    gl.uniform1f(advectionProgram.uniforms.dissipation, config.VELOCITY_DISSIPATION);\n    blit(velocity.write[1]);\n    velocity.swap();\n    gl.bindTexture(gl.TEXTURE_2D, burns[0]);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, burnsData); // ADVECTION\n    // burns\n    // velocityRead\n    // densityRead ->\n    // densityWrite\n\n    var texUnit = 0;\n    gl.activeTexture(gl.TEXTURE0 + texUnit);\n    gl.bindTexture(gl.TEXTURE_2D, burns[0]);\n    gl.uniform1i(advectionProgram.uniforms.uWind, texUnit++);\n    gl.activeTexture(gl.TEXTURE0 + texUnit);\n    gl.bindTexture(gl.TEXTURE_2D, velocity.read[0]);\n    gl.uniform1i(advectionProgram.uniforms.uVelocity, texUnit++);\n    gl.activeTexture(gl.TEXTURE0 + texUnit);\n    gl.bindTexture(gl.TEXTURE_2D, density.read[0]);\n    gl.uniform1i(advectionProgram.uniforms.uSource, texUnit++); // gl.uniform1i(advectionProgram.uniforms.uWind, burns[2]);\n    // gl.uniform1i(advectionProgram.uniforms.uVelocity, velocity.read[2]);\n    // gl.uniform1i(advectionProgram.uniforms.uSource, density.read[2]);\n\n    gl.uniform1f(advectionProgram.uniforms.dissipation, config.DENSITY_DISSIPATION);\n    blit(density.write[1]);\n    density.swap(); // Splat\n    // velocityRead -> velocityWrite\n    // densityRead -> velocityWrite\n\n    for (var i = 0; i < pointers.length; i++) {\n      var pointer = pointers[i];\n\n      if (pointer.moved && window.UI.state.selectedElement < 0) {\n        splat(pointer.x, pointer.y, pointer.dx, pointer.dy, pointer.color);\n        pointer.moved = false;\n      }\n    } // CURL\n    // velocityRead -> curl\n\n\n    curlProgram.bind();\n    var texUnit = 0;\n    gl.activeTexture(gl.TEXTURE0 + texUnit);\n    gl.bindTexture(gl.TEXTURE_2D, velocity.read[0]);\n    gl.uniform1i(curlProgram.uniforms.uVelocity, texUnit++);\n    gl.uniform2f(curlProgram.uniforms.texelSize, 1.0 / texWidth, 1.0 / texHeight); // gl.uniform1i(curlProgram.uniforms.uVelocity, velocity.read[2]);\n\n    blit(curl[1]); // VORTICITY\n    // velocityRead\n    // curl ->\n    // velocityWrite\n\n    vorticityProgram.bind();\n    var texUnit = 0;\n    gl.activeTexture(gl.TEXTURE0 + texUnit);\n    gl.bindTexture(gl.TEXTURE_2D, velocity.read[0]);\n    gl.uniform1i(vorticityProgram.uniforms.uVelocity, texUnit++);\n    gl.activeTexture(gl.TEXTURE0 + texUnit);\n    gl.bindTexture(gl.TEXTURE_2D, curl[0]);\n    gl.uniform1i(vorticityProgram.uniforms.uCurl, texUnit++);\n    gl.uniform2f(vorticityProgram.uniforms.texelSize, 1.0 / texWidth, 1.0 / texHeight); // gl.uniform1i(vorticityProgram.uniforms.uVelocity, velocity.read[2]);\n    // gl.uniform1i(vorticityProgram.uniforms.uCurl, curl[2]);\n\n    gl.uniform1f(vorticityProgram.uniforms.curl, config.CURL);\n    gl.uniform1f(vorticityProgram.uniforms.dt, dt);\n    blit(velocity.write[1]);\n    velocity.swap(); // DIVERGENCE\n    // velocityRead ->\n    // divergence\n\n    divergenceProgram.bind();\n    var texUnit = 0;\n    gl.activeTexture(gl.TEXTURE0 + texUnit);\n    gl.bindTexture(gl.TEXTURE_2D, velocity.read[0]);\n    gl.uniform1i(divergenceProgram.uniforms.uVelocity, texUnit++);\n    gl.uniform2f(divergenceProgram.uniforms.texelSize, 1.0 / texWidth, 1.0 / texHeight); // gl.uniform1i(divergenceProgram.uniforms.uVelocity, velocity.read[2]);\n\n    blit(divergence[1]); // CLEAR\n    // burns\n    // pressureRead->\n    // pressureWrite\n\n    clearProgram.bind();\n    var texUnit = 0;\n    gl.activeTexture(gl.TEXTURE0 + texUnit);\n    gl.bindTexture(gl.TEXTURE_2D, burns[0]);\n    gl.uniform1i(clearProgram.uniforms.uWind, texUnit++);\n    gl.activeTexture(gl.TEXTURE0 + texUnit);\n    gl.bindTexture(gl.TEXTURE_2D, pressure.read[0]);\n    gl.uniform1i(clearProgram.uniforms.uTexture, texUnit++);\n    var pressureTexId = texUnit - 1; // let pressureTexId = pressure.read[2];\n    // gl.activeTexture(gl.TEXTURE0 + pressureTexId);\n    // gl.bindTexture(gl.TEXTURE_2D, pressure.read[0]);\n    // gl.uniform1i(clearProgram.uniforms.uWind, burns[2]);\n    // gl.uniform1i(clearProgram.uniforms.uTexture, pressureTexId);\n\n    gl.uniform1f(clearProgram.uniforms.value, config.PRESSURE_DISSIPATION);\n    blit(pressure.write[1]);\n    pressure.swap(); // PRESSURE\n    // divergence\n    // pressureRead->\n    // pressureWrite\n\n    pressureProgram.bind(); //TODO\n\n    var texUnit = 0;\n    gl.activeTexture(gl.TEXTURE0 + texUnit);\n    gl.bindTexture(gl.TEXTURE_2D, divergence[0]);\n    gl.uniform1i(pressureProgram.uniforms.uDivergence, texUnit++); // gl.activeTexture(gl.TEXTURE0 + texUnit);\n    // gl.bindTexture(gl.TEXTURE_2D, pressure.read[0]);\n    // gl.uniform1i(clearProgram.uniforms.uTexture, texUnit++);\n\n    gl.uniform2f(pressureProgram.uniforms.texelSize, 1.0 / texWidth, 1.0 / texHeight); // gl.uniform1i(pressureProgram.uniforms.uDivergence, divergence[2]);\n\n    pressureTexId = pressure.read[2];\n    gl.uniform1i(pressureProgram.uniforms.uPressure, pressureTexId);\n    gl.activeTexture(gl.TEXTURE0 + pressureTexId);\n\n    for (var _i = 0; _i < config.PRESSURE_ITERATIONS; _i++) {\n      gl.bindTexture(gl.TEXTURE_2D, pressure.read[0]);\n      blit(pressure.write[1]);\n      pressure.swap();\n    } // VELOCITY OUT\n    // velocityRead\n    // pressureRead ->\n    // velocityOut\n\n\n    velocityOutProgram.bind();\n    var texUnit = 0;\n    gl.activeTexture(gl.TEXTURE0 + texUnit);\n    gl.bindTexture(gl.TEXTURE_2D, velocity.read[0]);\n    gl.uniform1i(velocityOutProgram.uniforms.uTexture, texUnit++);\n    gl.activeTexture(gl.TEXTURE0 + texUnit);\n    gl.bindTexture(gl.TEXTURE_2D, pressure.read[0]);\n    gl.uniform1i(velocityOutProgram.uniforms.uPressure, texUnit++); // gl.uniform1i(velocityOutProgram.uniforms.uTexture, velocity.read[2]);\n    // gl.uniform1i(velocityOutProgram.uniforms.uPressure, pressure.read[2]);\n\n    blit(velocityOut[1]);\n    gl.readPixels(0, 0, width, height, gl.RGBA, gl.UNSIGNED_BYTE, winds); // GRADIENT SUBTRACT\n    // burns\n    // pressureRead\n    // velocityRead ->\n    // velocityWrite\n\n    gradientSubtractProgram.bind();\n    var texUnit = 0;\n    gl.activeTexture(gl.TEXTURE0 + texUnit);\n    gl.bindTexture(gl.TEXTURE_2D, burns[0]);\n    gl.uniform1i(gradientSubtractProgram.uniforms.uWind, texUnit++);\n    gl.activeTexture(gl.TEXTURE0 + texUnit);\n    gl.bindTexture(gl.TEXTURE_2D, pressure.read[0]);\n    gl.uniform1i(gradientSubtractProgram.uniforms.uPressure, texUnit++);\n    gl.activeTexture(gl.TEXTURE0 + texUnit);\n    gl.bindTexture(gl.TEXTURE_2D, velocity.read[0]);\n    gl.uniform1i(gradientSubtractProgram.uniforms.uVelocity, texUnit++);\n    gl.uniform2f(gradientSubtractProgram.uniforms.texelSize, 1.0 / texWidth, 1.0 / texHeight); // gl.uniform1i(gradientSubtractProgram.uniforms.uWind, burns[2]);\n    // gl.uniform1i(gradientSubtractProgram.uniforms.uPressure, pressure.read[2]);\n    // gl.uniform1i(gradientSubtractProgram.uniforms.uVelocity, velocity.read[2]);\n\n    blit(velocity.write[1]);\n    velocity.swap();\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight); // DISPLAY\n    // density ->\n    // null/renderbuffer?\n\n    displayProgram.bind();\n    var texUnit = 0;\n    gl.activeTexture(gl.TEXTURE0 + texUnit);\n    gl.bindTexture(gl.TEXTURE_2D, density.read[0]);\n    gl.uniform1i(displayProgram.uniforms.uTexture, texUnit++); // gl.uniform1i(displayProgram.uniforms.uTexture, density.read[2]);\n\n    blit(null);\n  }\n\n  function splat(x, y, dx, dy, color) {\n    splatProgram.bind();\n    var texUnit = 0;\n    gl.activeTexture(gl.TEXTURE0 + texUnit);\n    gl.bindTexture(gl.TEXTURE_2D, velocity.read[0]);\n    gl.uniform1i(splatProgram.uniforms.uTarget, texUnit++); // gl.uniform1i(splatProgram.uniforms.uTarget, velocity.read[2]);\n\n    gl.uniform1f(splatProgram.uniforms.aspectRatio, canvas.width / canvas.height);\n    gl.uniform2f(splatProgram.uniforms.point, x / canvas.width, 1.0 - y / canvas.height);\n    gl.uniform3f(splatProgram.uniforms.color, dx, -dy, 1.0);\n    gl.uniform1f(splatProgram.uniforms.radius, (window.UI.state.size + 1) / 700);\n    blit(velocity.write[1]);\n    velocity.swap();\n    gl.activeTexture(gl.TEXTURE0 + texUnit);\n    gl.bindTexture(gl.TEXTURE_2D, density.read[0]);\n    gl.uniform1i(splatProgram.uniforms.uTarget, texUnit++); // gl.uniform1i(splatProgram.uniforms.uTarget, density.read[2]);\n\n    gl.uniform3f(splatProgram.uniforms.color, color[0], color[1], color[2]);\n    blit(density.write[1]);\n    density.swap();\n  }\n\n  function multipleSplats(amount) {\n    for (var i = 0; i < amount; i++) {\n      var color = fluidColor;\n      var x = canvas.width * Math.random();\n      var y = canvas.height * Math.random();\n      var dx = 1000 * (Math.random() - 0.5);\n      var dy = 1000 * (Math.random() - 0.5);\n      splat(x, y, dx, dy, color);\n    }\n  }\n\n  function resizeCanvas() {\n    if (canvas.width != canvas.clientWidth || canvas.height != canvas.clientHeight) {\n      canvas.width = canvas.clientWidth;\n      canvas.height = canvas.clientHeight;\n      initFramebuffers();\n    }\n  }\n\n  var boundingRect = sandCanvas.getBoundingClientRect();\n  var scaleX = sandCanvas.width / window.devicePixelRatio / boundingRect.width;\n  var scaleY = sandCanvas.height / window.devicePixelRatio / boundingRect.height;\n  sandCanvas.addEventListener(\"mousemove\", function (e) {\n    var canvasLeft = (e.clientX - boundingRect.left) * scaleX;\n    var canvasTop = (e.clientY - boundingRect.top) * scaleY;\n    pointers[0].moved = pointers[0].down;\n    pointers[0].dx = (canvasLeft - pointers[0].x) * 10.0;\n    pointers[0].dy = (canvasTop - pointers[0].y) * 10.0;\n    pointers[0].x = canvasLeft;\n    pointers[0].y = canvasTop;\n  });\n  sandCanvas.addEventListener(\"touchmove\", function (e) {\n    e.preventDefault();\n    var touches = e.targetTouches;\n\n    for (var i = 0; i < touches.length; i++) {\n      var pointer = pointers[i];\n      pointer.moved = pointer.down;\n      var canvasLeft = (touches[i].clientX - boundingRect.left) * scaleX;\n      var canvasTop = (touches[i].clientY - boundingRect.top) * scaleY;\n      pointer.dx = (canvasLeft - pointer.x) * 10.0;\n      pointer.dy = (canvasTop - pointer.y) * 10.0;\n      pointer.x = canvasLeft;\n      pointer.y = canvasTop;\n    }\n  }, false);\n  sandCanvas.addEventListener(\"mousedown\", function () {\n    pointers[0].down = true;\n    pointers[0].color = fluidColor;\n  });\n  sandCanvas.addEventListener(\"touchstart\", function (e) {\n    e.preventDefault();\n    var touches = e.targetTouches;\n\n    for (var i = 0; i < touches.length; i++) {\n      if (i >= pointers.length) pointers.push(new pointerPrototype());\n      var canvasLeft = (touches[i].clientX - boundingRect.left) * scaleX;\n      var canvasTop = (touches[i].clientY - boundingRect.top) * scaleY;\n      pointers[i].id = touches[i].identifier;\n      pointers[i].down = true;\n      pointers[i].x = canvasLeft;\n      pointers[i].y = canvasTop;\n      pointers[i].color = fluidColor;\n    }\n  });\n  window.addEventListener(\"mouseup\", function () {\n    pointers[0].down = false;\n  });\n  window.addEventListener(\"touchend\", function (e) {\n    var touches = e.changedTouches;\n\n    for (var i = 0; i < touches.length; i++) {\n      for (var j = 0; j < pointers.length; j++) {\n        if (touches[i].identifier == pointers[j].id) pointers[j].down = false;\n      }\n    }\n  });\n  return update;\n}\n\n\n\n//# sourceURL=webpack:///./js/fluid.js?");

/***/ }),

/***/ "./js/fluidShaders.js":
/*!****************************!*\
  !*** ./js/fluidShaders.js ***!
  \****************************/
/*! exports provided: compileShaders */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"compileShaders\", function() { return compileShaders; });\nvar baseVertex = __webpack_require__(/*! ./glsl/baseVertex.glsl */ \"./js/glsl/baseVertex.glsl\");\n\nvar clearShaderString = __webpack_require__(/*! ./glsl/clear.glsl */ \"./js/glsl/clear.glsl\");\n\nvar displayShaderString = __webpack_require__(/*! ./glsl/display.glsl */ \"./js/glsl/display.glsl\");\n\nvar splatShaderString = __webpack_require__(/*! ./glsl/splat.glsl */ \"./js/glsl/splat.glsl\");\n\nvar advectionManualFilteringShaderString = __webpack_require__(/*! ./glsl/advectionManualFilter.glsl */ \"./js/glsl/advectionManualFilter.glsl\");\n\nvar advectionShaderString = __webpack_require__(/*! ./glsl/advection.glsl */ \"./js/glsl/advection.glsl\");\n\nvar divergenceShaderString = __webpack_require__(/*! ./glsl/divergence.glsl */ \"./js/glsl/divergence.glsl\");\n\nvar curlShaderString = __webpack_require__(/*! ./glsl/curl.glsl */ \"./js/glsl/curl.glsl\");\n\nvar vorticityShaderString = __webpack_require__(/*! ./glsl/vorticity.glsl */ \"./js/glsl/vorticity.glsl\");\n\nvar pressureShaderString = __webpack_require__(/*! ./glsl/pressure.glsl */ \"./js/glsl/pressure.glsl\");\n\nvar gradientSubtractShaderString = __webpack_require__(/*! ./glsl/gradientSubtract.glsl */ \"./js/glsl/gradientSubtract.glsl\");\n\nvar velocityOutShaderString = __webpack_require__(/*! ./glsl/velocityOut.glsl */ \"./js/glsl/velocityOut.glsl\");\n\nfunction compileShaders(gl) {\n  function compileShader(type, source) {\n    var shader = gl.createShader(type);\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) throw gl.getShaderInfoLog(shader);\n    return shader;\n  }\n\n  var baseVertexShader = compileShader(gl.VERTEX_SHADER, baseVertex);\n  var clearShader = compileShader(gl.FRAGMENT_SHADER, clearShaderString);\n  var displayShader = compileShader(gl.FRAGMENT_SHADER, displayShaderString);\n  var splatShader = compileShader(gl.FRAGMENT_SHADER, splatShaderString);\n  var advectionManualFilteringShader = compileShader(gl.FRAGMENT_SHADER, advectionManualFilteringShaderString);\n  var advectionShader = compileShader(gl.FRAGMENT_SHADER, advectionShaderString);\n  var divergenceShader = compileShader(gl.FRAGMENT_SHADER, divergenceShaderString);\n  var curlShader = compileShader(gl.FRAGMENT_SHADER, curlShaderString);\n  var vorticityShader = compileShader(gl.FRAGMENT_SHADER, vorticityShaderString);\n  var pressureShader = compileShader(gl.FRAGMENT_SHADER, pressureShaderString);\n  var gradientSubtractShader = compileShader(gl.FRAGMENT_SHADER, gradientSubtractShaderString);\n  var velocityOutShader = compileShader(gl.FRAGMENT_SHADER, velocityOutShaderString);\n  return {\n    baseVertexShader: baseVertexShader,\n    clearShader: clearShader,\n    displayShader: displayShader,\n    splatShader: splatShader,\n    advectionManualFilteringShader: advectionManualFilteringShader,\n    advectionShader: advectionShader,\n    divergenceShader: divergenceShader,\n    curlShader: curlShader,\n    vorticityShader: vorticityShader,\n    pressureShader: pressureShader,\n    gradientSubtractShader: gradientSubtractShader,\n    velocityOutShader: velocityOutShader\n  };\n}\n\n\n\n//# sourceURL=webpack:///./js/fluidShaders.js?");

/***/ }),

/***/ "./js/glsl/advection.glsl":
/*!********************************!*\
  !*** ./js/glsl/advection.glsl ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"\\nprecision highp float;\\nprecision mediump sampler2D;\\n#define GLSLIFY 1\\nvarying vec2 vUv;\\nuniform sampler2D uVelocity;\\nuniform sampler2D uSource;\\nuniform sampler2D uWind;\\nuniform vec2 texelSize;\\nuniform float dt;\\nuniform float dissipation;\\nvoid main() {\\n  vec2 coord = vUv - dt * texture2D(uVelocity, vUv).xy * texelSize;\\n  float density = texture2D(uWind, vUv).w * 1.;\\n  if (density > 0.99) {\\n    density = 0.;\\n  }\\n\\n  gl_FragColor = dissipation * (texture2D(uSource, coord) + vec4(density));\\n  gl_FragColor.a = 1.0;\\n}\\n\"\n\n//# sourceURL=webpack:///./js/glsl/advection.glsl?");

/***/ }),

/***/ "./js/glsl/advectionManualFilter.glsl":
/*!********************************************!*\
  !*** ./js/glsl/advectionManualFilter.glsl ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"precision highp float;\\nprecision mediump sampler2D;\\n#define GLSLIFY 1\\nvarying vec2 vUv;\\nuniform sampler2D uVelocity;\\nuniform sampler2D uSource;\\nuniform sampler2D uWind;\\nuniform vec2 texelSize;\\nuniform float dt;\\nuniform float dissipation;\\nvec4 bilerp(in sampler2D sam, in vec2 p) {\\n  vec4 st;\\n  st.xy = floor(p - 0.5) + 0.5;\\n  st.zw = st.xy + 1.0;\\n  vec4 uv = st * texelSize.xyxy;\\n  vec4 a = texture2D(sam, uv.xy);\\n  vec4 b = texture2D(sam, uv.zy);\\n  vec4 c = texture2D(sam, uv.xw);\\n  vec4 d = texture2D(sam, uv.zw);\\n  vec2 f = p - st.xy;\\n  return mix(mix(a, b, f.x), mix(c, d, f.x), f.y);\\n}\\nvoid main() {\\n  vec2 coord = gl_FragCoord.xy - dt * texture2D(uVelocity, vUv).xy;\\n  float density = texture2D(uWind, vUv).w;\\n  if (density > 0.99) {\\n    density = 0.;\\n  }\\n  gl_FragColor = dissipation * (bilerp(uSource, coord) + vec4(density));\\n  gl_FragColor.a = 1.0;\\n}\"\n\n//# sourceURL=webpack:///./js/glsl/advectionManualFilter.glsl?");

/***/ }),

/***/ "./js/glsl/baseVertex.glsl":
/*!*********************************!*\
  !*** ./js/glsl/baseVertex.glsl ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"precision highp float;\\nprecision mediump sampler2D;\\n#define GLSLIFY 1\\nattribute vec2 aPosition;\\nvarying vec2 vUv;\\nvarying vec2 vL;\\nvarying vec2 vR;\\nvarying vec2 vT;\\nvarying vec2 vB;\\nuniform vec2 texelSize;\\nvoid main() {\\n  vUv = aPosition * 0.5 + 0.5;\\n  vL = vUv - vec2(texelSize.x, 0.0);\\n  vR = vUv + vec2(texelSize.x, 0.0);\\n  vT = vUv + vec2(0.0, texelSize.y);\\n  vB = vUv - vec2(0.0, texelSize.y);\\n  gl_Position = vec4(aPosition, 0.0, 1.0);\\n}\\n\"\n\n//# sourceURL=webpack:///./js/glsl/baseVertex.glsl?");

/***/ }),

/***/ "./js/glsl/clear.glsl":
/*!****************************!*\
  !*** ./js/glsl/clear.glsl ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"precision highp float;\\nprecision mediump sampler2D;\\n#define GLSLIFY 1\\nvarying vec2 vUv;\\nuniform sampler2D uTexture;\\nuniform sampler2D uWind;\\nuniform float value;\\nvoid main() {\\n  float pressure = texture2D(uWind, vUv).z;\\n  pressure *= 512.;\\n  pressure *= pressure;\\n  gl_FragColor = value * (texture2D(uTexture, vUv) + vec4(pressure));\\n}\"\n\n//# sourceURL=webpack:///./js/glsl/clear.glsl?");

/***/ }),

/***/ "./js/glsl/curl.glsl":
/*!***************************!*\
  !*** ./js/glsl/curl.glsl ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"precision highp float;\\nprecision mediump sampler2D;\\n#define GLSLIFY 1\\nvarying vec2 vUv;\\nvarying vec2 vL;\\nvarying vec2 vR;\\nvarying vec2 vT;\\nvarying vec2 vB;\\nuniform sampler2D uVelocity;\\nvoid main() {\\n  float L = texture2D(uVelocity, vL).y;\\n  float R = texture2D(uVelocity, vR).y;\\n  float T = texture2D(uVelocity, vT).x;\\n  float B = texture2D(uVelocity, vB).x;\\n  float vorticity = R - L - T + B;\\n  gl_FragColor = vec4(vorticity, 0.0, 0.0, 1.0);\\n}\"\n\n//# sourceURL=webpack:///./js/glsl/curl.glsl?");

/***/ }),

/***/ "./js/glsl/display.glsl":
/*!******************************!*\
  !*** ./js/glsl/display.glsl ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"precision highp float;\\nprecision mediump sampler2D;\\n#define GLSLIFY 1\\nvarying vec2 vUv;\\nuniform sampler2D uTexture;\\nvoid main() {\\n  vec3 color = texture2D(uTexture, vUv).rgb * 0.1;\\n  color = min(color, 0.4);\\n  color = vec3(1.0) - color;\\n  color *= vec3(0.95, 0.9, 0.9);\\n  gl_FragColor = vec4(color, 1.0);\\n}\\n\"\n\n//# sourceURL=webpack:///./js/glsl/display.glsl?");

/***/ }),

/***/ "./js/glsl/divergence.glsl":
/*!*********************************!*\
  !*** ./js/glsl/divergence.glsl ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"precision highp float;\\nprecision mediump sampler2D;\\n#define GLSLIFY 1\\nvarying vec2 vUv;\\nvarying vec2 vL;\\nvarying vec2 vR;\\nvarying vec2 vT;\\nvarying vec2 vB;\\nuniform sampler2D uVelocity;\\nvec2 sampleVelocity(in vec2 uv) {\\n  vec2 multiplier = vec2(1.0, 1.0);\\n  if (uv.x < 0.0) {\\n    uv.x = 0.0;\\n    multiplier.x = -1.0;\\n  }\\n  if (uv.x > 1.0) {\\n    uv.x = 1.0;\\n    multiplier.x = -1.0;\\n  }\\n  if (uv.y < 0.0) {\\n    uv.y = 0.0;\\n    multiplier.y = -1.0;\\n  }\\n  if (uv.y > 1.0) {\\n    uv.y = 1.0;\\n    multiplier.y = -1.0;\\n  }\\n  return multiplier * texture2D(uVelocity, uv).xy;\\n}\\nvoid main() {\\n  float L = sampleVelocity(vL).x;\\n  float R = sampleVelocity(vR).x;\\n  float T = sampleVelocity(vT).y;\\n  float B = sampleVelocity(vB).y;\\n  float div = 0.5 * (R - L + T - B);\\n  gl_FragColor = vec4(div, 0.0, 0.0, 1.0);\\n}\\n\"\n\n//# sourceURL=webpack:///./js/glsl/divergence.glsl?");

/***/ }),

/***/ "./js/glsl/gradientSubtract.glsl":
/*!***************************************!*\
  !*** ./js/glsl/gradientSubtract.glsl ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"precision highp float;\\nprecision mediump sampler2D;\\n#define GLSLIFY 1\\nvarying vec2 vUv;\\nvarying vec2 vL;\\nvarying vec2 vR;\\nvarying vec2 vT;\\nvarying vec2 vB;\\nuniform sampler2D uPressure;\\nuniform sampler2D uVelocity;\\nuniform sampler2D uWind;\\nvec2 boundary(in vec2 uv) {\\n  uv = min(max(uv, 0.0), 1.0);\\n  return uv;\\n}\\nvoid main() {\\n  float L = texture2D(uPressure, boundary(vL)).x;\\n  float R = texture2D(uPressure, boundary(vR)).x;\\n  float T = texture2D(uPressure, boundary(vT)).x;\\n  float B = texture2D(uPressure, boundary(vB)).x;\\n  vec2 velocity = texture2D(uVelocity, vUv).xy;\\n  vec2 wind = texture2D(uWind, vUv).xy;\\n  velocity.xy -= vec2(R - L, T - B);\\n  velocity.xy += wind * 25.;\\n  gl_FragColor = vec4(velocity, 0.0, 1.0);\\n}\"\n\n//# sourceURL=webpack:///./js/glsl/gradientSubtract.glsl?");

/***/ }),

/***/ "./js/glsl/pressure.glsl":
/*!*******************************!*\
  !*** ./js/glsl/pressure.glsl ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"precision highp float;\\nprecision mediump sampler2D;\\n#define GLSLIFY 1\\nvarying vec2 vUv;\\nvarying vec2 vL;\\nvarying vec2 vR;\\nvarying vec2 vT;\\nvarying vec2 vB;\\nuniform sampler2D uPressure;\\nuniform sampler2D uDivergence;\\nvec2 boundary(in vec2 uv) {\\n  uv = min(max(uv, 0.0), 1.0);\\n  return uv;\\n}\\nvoid main() {\\n  float L = texture2D(uPressure, boundary(vL)).x;\\n  float R = texture2D(uPressure, boundary(vR)).x;\\n  float T = texture2D(uPressure, boundary(vT)).x;\\n  float B = texture2D(uPressure, boundary(vB)).x;\\n  float C = texture2D(uPressure, vUv).x;\\n  float divergence = texture2D(uDivergence, vUv).x;\\n  float pressure = (L + R + B + T - divergence) * 0.25;\\n  gl_FragColor = vec4(pressure, 0.0, 0.0, 1.0);\\n}\"\n\n//# sourceURL=webpack:///./js/glsl/pressure.glsl?");

/***/ }),

/***/ "./js/glsl/sand.glsl":
/*!***************************!*\
  !*** ./js/glsl/sand.glsl ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"precision highp float;\\n#define GLSLIFY 1\\nuniform float t;\\nuniform float dpi;\\nuniform vec2 resolution;\\nuniform sampler2D backBuffer;\\nuniform sampler2D data;\\n\\nvarying vec2 uv;\\n\\n// clang-format off\\nvec3 hsv2rgb(vec3 c) {\\n  vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\\n}\\n\\n//\\n// Description : Array and textureless GLSL 2D/3D/4D simplex\\n//               noise functions.\\n//      Author : Ian McEwan, Ashima Arts.\\n//  Maintainer : ijm\\n//     Lastmod : 20110822 (ijm)\\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\\n//               Distributed under the MIT License. See LICENSE file.\\n//               https://github.com/ashima/webgl-noise\\n//\\n\\nvec3 mod289_1(vec3 x) {\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\n\\nvec4 mod289_1(vec4 x) {\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\n\\nvec4 permute_1(vec4 x) {\\n     return mod289_1(((x*34.0)+1.0)*x);\\n}\\n\\nvec4 taylorInvSqrt(vec4 r)\\n{\\n  return 1.79284291400159 - 0.85373472095314 * r;\\n}\\n\\nfloat snoise_1(vec3 v)\\n  {\\n  const vec2  C = vec2(1.0/6.0, 1.0/3.0) ;\\n  const vec4  D = vec4(0.0, 0.5, 1.0, 2.0);\\n\\n// First corner\\n  vec3 i  = floor(v + dot(v, C.yyy) );\\n  vec3 x0 =   v - i + dot(i, C.xxx) ;\\n\\n// Other corners\\n  vec3 g_0 = step(x0.yzx, x0.xyz);\\n  vec3 l = 1.0 - g_0;\\n  vec3 i1 = min( g_0.xyz, l.zxy );\\n  vec3 i2 = max( g_0.xyz, l.zxy );\\n\\n  //   x0 = x0 - 0.0 + 0.0 * C.xxx;\\n  //   x1 = x0 - i1  + 1.0 * C.xxx;\\n  //   x2 = x0 - i2  + 2.0 * C.xxx;\\n  //   x3 = x0 - 1.0 + 3.0 * C.xxx;\\n  vec3 x1 = x0 - i1 + C.xxx;\\n  vec3 x2 = x0 - i2 + C.yyy; // 2.0*C.x = 1/3 = C.y\\n  vec3 x3 = x0 - D.yyy;      // -1.0+3.0*C.x = -0.5 = -D.y\\n\\n// Permutations\\n  i = mod289_1(i);\\n  vec4 p = permute_1( permute_1( permute_1(\\n             i.z + vec4(0.0, i1.z, i2.z, 1.0 ))\\n           + i.y + vec4(0.0, i1.y, i2.y, 1.0 ))\\n           + i.x + vec4(0.0, i1.x, i2.x, 1.0 ));\\n\\n// Gradients: 7x7 points over a square, mapped onto an octahedron.\\n// The ring size 17*17 = 289 is close to a multiple of 49 (49*6 = 294)\\n  float n_ = 0.142857142857; // 1.0/7.0\\n  vec3  ns = n_ * D.wyz - D.xzx;\\n\\n  vec4 j = p - 49.0 * floor(p * ns.z * ns.z);  //  mod(p,7*7)\\n\\n  vec4 x_ = floor(j * ns.z);\\n  vec4 y_ = floor(j - 7.0 * x_ );    // mod(j,N)\\n\\n  vec4 x = x_ *ns.x + ns.yyyy;\\n  vec4 y = y_ *ns.x + ns.yyyy;\\n  vec4 h = 1.0 - abs(x) - abs(y);\\n\\n  vec4 b0 = vec4( x.xy, y.xy );\\n  vec4 b1 = vec4( x.zw, y.zw );\\n\\n  //vec4 s0 = vec4(lessThan(b0,0.0))*2.0 - 1.0;\\n  //vec4 s1 = vec4(lessThan(b1,0.0))*2.0 - 1.0;\\n  vec4 s0 = floor(b0)*2.0 + 1.0;\\n  vec4 s1 = floor(b1)*2.0 + 1.0;\\n  vec4 sh = -step(h, vec4(0.0));\\n\\n  vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ;\\n  vec4 a1 = b1.xzyw + s1.xzyw*sh.zzww ;\\n\\n  vec3 p0 = vec3(a0.xy,h.x);\\n  vec3 p1 = vec3(a0.zw,h.y);\\n  vec3 p2 = vec3(a1.xy,h.z);\\n  vec3 p3 = vec3(a1.zw,h.w);\\n\\n//Normalise gradients\\n  vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\\n  p0 *= norm.x;\\n  p1 *= norm.y;\\n  p2 *= norm.z;\\n  p3 *= norm.w;\\n\\n// Mix final noise value\\n  vec4 m = max(0.6 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);\\n  m = m * m;\\n  return 42.0 * dot( m*m, vec4( dot(p0,x0), dot(p1,x1),\\n                                dot(p2,x2), dot(p3,x3) ) );\\n  }\\n\\n//\\n// Description : Array and textureless GLSL 2D simplex noise function.\\n//      Author : Ian McEwan, Ashima Arts.\\n//  Maintainer : ijm\\n//     Lastmod : 20110822 (ijm)\\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\\n//               Distributed under the MIT License. See LICENSE file.\\n//               https://github.com/ashima/webgl-noise\\n//\\n\\nvec3 mod289_0(vec3 x) {\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\n\\nvec2 mod289_0(vec2 x) {\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\n\\nvec3 permute_0(vec3 x) {\\n  return mod289_0(((x*34.0)+1.0)*x);\\n}\\n\\nfloat snoise_0(vec2 v)\\n  {\\n  const vec4 C = vec4(0.211324865405187,  // (3.0-sqrt(3.0))/6.0\\n                      0.366025403784439,  // 0.5*(sqrt(3.0)-1.0)\\n                     -0.577350269189626,  // -1.0 + 2.0 * C.x\\n                      0.024390243902439); // 1.0 / 41.0\\n// First corner\\n  vec2 i  = floor(v + dot(v, C.yy) );\\n  vec2 x0 = v -   i + dot(i, C.xx);\\n\\n// Other corners\\n  vec2 i1;\\n  //i1.x = step( x0.y, x0.x ); // x0.x > x0.y ? 1.0 : 0.0\\n  //i1.y = 1.0 - i1.x;\\n  i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\\n  // x0 = x0 - 0.0 + 0.0 * C.xx ;\\n  // x1 = x0 - i1 + 1.0 * C.xx ;\\n  // x2 = x0 - 1.0 + 2.0 * C.xx ;\\n  vec4 x12 = x0.xyxy + C.xxzz;\\n  x12.xy -= i1;\\n\\n// Permutations\\n  i = mod289_0(i); // Avoid truncation effects in permutation\\n  vec3 p = permute_0( permute_0( i.y + vec3(0.0, i1.y, 1.0 ))\\n    + i.x + vec3(0.0, i1.x, 1.0 ));\\n\\n  vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\\n  m = m*m ;\\n  m = m*m ;\\n\\n// Gradients: 41 points uniformly over a line, mapped onto a diamond.\\n// The ring size 17*17 = 289 is close to a multiple of 41 (41*7 = 287)\\n\\n  vec3 x = 2.0 * fract(p * C.www) - 1.0;\\n  vec3 h = abs(x) - 0.5;\\n  vec3 ox = floor(x + 0.5);\\n  vec3 a0 = x - ox;\\n\\n// Normalise gradients implicitly by scaling m\\n// Approximation of: m *= inversesqrt( a0*a0 + h*h );\\n  m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\\n\\n// Compute final noise value at P\\n  vec3 g;\\n  g.x  = a0.x  * x0.x  + h.x  * x0.y;\\n  g.yz = a0.yz * x12.xz + h.yz * x12.yw;\\n  return 130.0 * dot(m, g);\\n}\\n\\nhighp float random(vec2 co)\\n{\\n    highp float a = 12.9898;\\n    highp float b = 78.233;\\n    highp float c = 43758.5453;\\n    highp float dt= dot(co.xy ,vec2(a,b));\\n    highp float sn= mod(dt,3.14);\\n    return fract(sin(sn) * c);\\n}\\n\\n// clang-format on\\n\\nvoid main() {\\n  vec3 color;\\n  //   float r = abs(sin(t / 25.));\\n  //   if (length(uv) < r && length(uv) > r - 0.1) {\\n  // color = hsv2rgb(vec3(sin(t * 0.01), 0.5, 0.5));\\n\\n  vec2 textCoord = (uv * vec2(0.5, -0.5)) + vec2(0.5);\\n  vec4 data = texture2D(data, textCoord);\\n  int type = int((data.r * 255.) + 0.1);\\n  float hue = 0.0;\\n  float saturation = 0.6;\\n  float lightness = 0.3 + data.g * 0.5;\\n  float noise = snoise_1(vec3(floor(uv * resolution / dpi), t * 0.05));\\n  float a = 1.0;\\n\\n  if (type == 0) {\\n    hue = 0.1;\\n    saturation = 0.1;\\n    lightness = 0.1;\\n    a = 0.1;\\n  } else if (type == 1) {\\n    hue = 0.1;\\n    saturation = 0.1;\\n    lightness = 0.4;\\n  } else if (type == 2) {\\n    hue = 0.1;\\n  } else if (type == 3) { // water\\n    hue = 0.6;\\n    lightness = 0.7 + data.g * 0.25 + noise * 0.1;\\n  } else if (type == 4) { // gas\\n    hue = 0.0;\\n    lightness += 0.4;\\n    saturation = 0.2;\\n  } else if (type == 5) { // clone\\n    hue = 0.9;\\n    saturation = 0.3;\\n  } else if (type == 6) { // fire\\n    hue = (data.g * 0.1);\\n    lightness = 0.8 + data.g * 0.3 + noise * 0.1;\\n  } else if (type == 7) { // wood\\n    hue = (data.g * 0.1);\\n    saturation = 0.3;\\n    lightness = 0.3 + data.g * 0.3;\\n  } else if (type == 8) { // lava\\n    hue = (data.g * 0.1);\\n    lightness = 0.7 + data.g * 0.25 + noise * 0.1;\\n  } else if (type == 9) { // ice\\n    hue = 0.6;\\n    saturation = 0.4;\\n    lightness = 0.7 + data.g * 0.5;\\n  } else if (type == 10) { // sink\\n    hue = 0.9;\\n    saturation = 0.4;\\n    lightness = 1.0;\\n  } else if (type == 11) { // plant\\n    hue = 0.4;\\n    saturation = 0.4;\\n  } else if (type == 12) { // acid\\n    hue = 0.18;\\n    saturation = 0.9;\\n    lightness = 0.8 + data.g * 0.2 + noise * 0.05;\\n  } else if (type == 13) { // stone\\n    hue = 0.9;\\n    saturation = 0.1;\\n    // lightness = 0.2 + data.g * 0.5;\\n  } else if (type == 14) { // dust\\n    hue = (data.g * 1.5) + t * .0008;\\n    saturation = 0.5;\\n    lightness = 0.8;\\n  } else if (type == 15) { // mite\\n    hue = 0.8;\\n    saturation = 0.3;\\n    lightness = 0.8;\\n  }\\n  lightness *= (0.95 + snoise_0(floor(uv * resolution / dpi)) * 0.05);\\n\\n  color = hsv2rgb(vec3(hue, saturation, lightness));\\n  gl_FragColor = vec4(color, a);\\n}\"\n\n//# sourceURL=webpack:///./js/glsl/sand.glsl?");

/***/ }),

/***/ "./js/glsl/sandVertex.glsl":
/*!*********************************!*\
  !*** ./js/glsl/sandVertex.glsl ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"\\n// boring \\\"pass-through\\\" vertex shader\\nprecision mediump float;\\n#define GLSLIFY 1\\nattribute vec2 position;\\nvarying vec2 uv;\\nvoid main() {\\n  uv = position;\\n  gl_Position = vec4(position, 0, 1);\\n}\"\n\n//# sourceURL=webpack:///./js/glsl/sandVertex.glsl?");

/***/ }),

/***/ "./js/glsl/splat.glsl":
/*!****************************!*\
  !*** ./js/glsl/splat.glsl ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"precision highp float;\\nprecision mediump sampler2D;\\n#define GLSLIFY 1\\nvarying vec2 vUv;\\nuniform sampler2D uTarget;\\nuniform float aspectRatio;\\nuniform vec3 color;\\nuniform vec2 point;\\nuniform float radius;\\nvoid main() {\\n  vec2 p = vUv - point.xy;\\n  p.x *= aspectRatio;\\n  vec3 splat = exp(-dot(p, p) / radius) * color;\\n  vec3 base = texture2D(uTarget, vUv).xyz;\\n  gl_FragColor = vec4(base + splat, 1.0);\\n}\"\n\n//# sourceURL=webpack:///./js/glsl/splat.glsl?");

/***/ }),

/***/ "./js/glsl/velocityOut.glsl":
/*!**********************************!*\
  !*** ./js/glsl/velocityOut.glsl ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"precision highp float;\\nprecision mediump sampler2D;\\n#define GLSLIFY 1\\nvarying vec2 vUv;\\nuniform sampler2D uTexture;\\nuniform sampler2D uPressure;\\nvoid main() {\\n  vec2 v = texture2D(uTexture, vUv).rg;\\n  float p = texture2D(uPressure, vUv).r;\\n  vec3 vp = vec3(v, p);\\n  vp = max(vp, vec3(-250.));\\n  vp = min(vp, vec3(250.));\\n  vp /= 500.;\\n  vp += vec3(0.5, 0.5, 0.);\\n  // v = vec2(0.5);\\n  gl_FragColor = vec4(vp, 0.0);\\n}\\n\"\n\n//# sourceURL=webpack:///./js/glsl/velocityOut.glsl?");

/***/ }),

/***/ "./js/glsl/vorticity.glsl":
/*!********************************!*\
  !*** ./js/glsl/vorticity.glsl ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"precision highp float;\\nprecision mediump sampler2D;\\n#define GLSLIFY 1\\nvarying vec2 vUv;\\nvarying vec2 vT;\\nvarying vec2 vB;\\nuniform sampler2D uVelocity;\\nuniform sampler2D uCurl;\\nuniform float curl;\\nuniform float dt;\\nvoid main() {\\n  float T = texture2D(uCurl, vT).x;\\n  float B = texture2D(uCurl, vB).x;\\n  float C = texture2D(uCurl, vUv).x;\\n  vec2 force = vec2(abs(T) - abs(B), 0.0);\\n  force *= 1.0 / length(force + 0.00001) * curl * C;\\n  vec2 vel = texture2D(uVelocity, vUv).xy;\\n  gl_FragColor = vec4(vel + force * dt, 0.0, 1.0);\\n}\"\n\n//# sourceURL=webpack:///./js/glsl/vorticity.glsl?");

/***/ }),

/***/ "./js/index.js":
/*!*********************!*\
  !*** ./js/index.js ***!
  \*********************/
/*! exports provided: renderLoop, canvas, width, height, universe, ratio */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"renderLoop\", function() { return renderLoop; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"canvas\", function() { return canvas; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"width\", function() { return width; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"height\", function() { return height; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"universe\", function() { return universe; });\n/* harmony import */ var _crate_pkg__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../crate/pkg */ \"./crate/pkg/sandtable.js\");\n/* harmony import */ var _render__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./render */ \"./js/render.js\");\n/* harmony import */ var _ui__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ui */ \"./js/ui.js\");\n/* harmony import */ var _fluid__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./fluid */ \"./js/fluid.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./constants */ \"./js/constants.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ratio\", function() { return _constants__WEBPACK_IMPORTED_MODULE_4__[\"ratio\"]; });\n\n\n\n\n\n\n\nif (window.safari) {\n  history.pushState(null, null, location.href);\n\n  window.onpopstate = function (event) {\n    history.go(1);\n  };\n}\n\nfunction mobileAndTabletcheck() {\n  var check = false;\n\n  (function (a) {\n    if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0, 4))) check = true;\n  })(navigator.userAgent || navigator.vendor || window.opera);\n\n  return check;\n}\n\nif (mobileAndTabletcheck()) {\n  window.onbeforeunload = function () {\n    return true;\n  };\n}\n\nvar universe = _crate_pkg__WEBPACK_IMPORTED_MODULE_0__[\"Universe\"].new(250, 250);\nvar width = universe.width();\nvar height = universe.height();\nvar canvas = document.getElementById(\"sand-canvas\");\nvar canvas2 = document.getElementById(\"fluid-canvas\");\ncanvas.height = height * window.devicePixelRatio;\ncanvas.width = width * window.devicePixelRatio;\ndocument.getElementById(\"background\").addEventListener(\"touchmove\", function (e) {\n  e.preventDefault();\n});\nvar ui = document.getElementById(\"ui\");\nvar screen_width = window.innerWidth;\nvar uiheight = ui.offsetHeight;\nvar screen_height = window.innerHeight - uiheight;\nvar canvasStyle = \"\";\n\nif (screen_width > screen_height) {\n  if (screen_width - window.innerHeight < 225) {\n    canvasStyle = \"height: \".concat(window.innerHeight, \"px; margin:3px\");\n    ui.style = \"width: \".concat(screen_width - window.innerHeight - 11, \"px; margin: 3px;\");\n  } else {\n    canvasStyle = \"height: \".concat(window.innerHeight, \"px\");\n    ui.style = \"width: \".concat((screen_width - window.innerHeight) / 2 - 7, \"px; margin: 3px;\");\n  }\n} else {\n  canvasStyle = \"width: \".concat(screen_width, \"px; bottom:3px;\");\n}\n\ncanvas.style = canvasStyle;\ncanvas2.style = canvasStyle;\nvar fluid_update = Object(_fluid__WEBPACK_IMPORTED_MODULE_3__[\"startFluid\"])({\n  universe: universe\n});\n\nvar renderLoop = function renderLoop() {\n  _ui__WEBPACK_IMPORTED_MODULE_2__[\"fps\"].render(); // new\n\n  universe.tick();\n  fluid_update();\n  window.animationId = requestAnimationFrame(renderLoop);\n};\n\nObject(_render__WEBPACK_IMPORTED_MODULE_1__[\"startWebGL\"])({\n  canvas: canvas,\n  universe: universe\n});\nrenderLoop();\n\n\n//# sourceURL=webpack:///./js/index.js?");

/***/ }),

/***/ "./js/render.js":
/*!**********************!*\
  !*** ./js/render.js ***!
  \**********************/
/*! exports provided: startWebGL, universe */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"startWebGL\", function() { return startWebGL; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"universe\", function() { return universe; });\n/* harmony import */ var _crate_pkg_sandtable_bg__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../crate/pkg/sandtable_bg */ \"./crate/pkg/sandtable_bg.wasm\");\nvar reglBuilder = __webpack_require__(/*! regl */ \"./node_modules/regl/dist/regl.js\");\n\n\n\nvar fsh = __webpack_require__(/*! ./glsl/sand.glsl */ \"./js/glsl/sand.glsl\");\n\nvar vsh = __webpack_require__(/*! ./glsl/sandVertex.glsl */ \"./js/glsl/sandVertex.glsl\");\n\nvar startWebGL = function startWebGL(_ref) {\n  var canvas = _ref.canvas,\n      universe = _ref.universe;\n  var regl = reglBuilder({\n    canvas: canvas // attributes: { preserveDrawingBuffer: true }\n\n  });\n  var lastFrame = regl.texture();\n  var cellsPtr = universe.cells();\n  var width = universe.width();\n  var height = universe.height();\n  var cells = new Uint8Array(_crate_pkg_sandtable_bg__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer, cellsPtr, width * height * 4);\n  var dataTexture = regl.texture({\n    width: width,\n    height: height,\n    data: cells\n  });\n  var drawTriangle = regl({\n    frag: fsh,\n    uniforms: {\n      t: function t(_ref2) {\n        var tick = _ref2.tick;\n        return tick;\n      },\n      data: function data() {\n        return dataTexture({\n          width: width,\n          height: height,\n          data: cells\n        });\n      },\n      resolution: function resolution(_ref3) {\n        var viewportWidth = _ref3.viewportWidth,\n            viewportHeight = _ref3.viewportHeight;\n        return [viewportWidth, viewportHeight];\n      },\n      dpi: window.devicePixelRatio * 2,\n      backBuffer: lastFrame\n    },\n    vert: vsh,\n    attributes: {\n      // Full screen triangle\n      position: [[-1, 4], [-1, -1], [4, -1]]\n    },\n    // Our triangle has 3 vertices\n    count: 3\n  });\n  regl.frame(function (context) {\n    // regl.clear({ color: [0, 0, 0, 0] });\n    drawTriangle(); // lastFrame({ copy: true });\n  });\n};\n\n\n\n//# sourceURL=webpack:///./js/render.js?");

/***/ }),

/***/ "./js/ui.js":
/*!******************!*\
  !*** ./js/ui.js ***!
  \******************/
/*! exports provided: fps */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fps\", function() { return fps; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-dom */ \"./node_modules/react-dom/index.js\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_dom__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _crate_pkg__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../crate/pkg */ \"./crate/pkg/sandtable.js\");\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./index.js */ \"./js/index.js\");\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n\n\n\n\nvar canvas = document.getElementById(\"sand-canvas\");\n\nvar eventDistance = function eventDistance(a, b) {\n  return Math.sqrt(Math.pow(a.clientX - b.clientX, 2) + Math.pow(a.clientY - b.clientY, 2), 2);\n};\n\nvar magnitude = function magnitude(a) {\n  return Math.sqrt(Math.pow(a.clientX, 2) + Math.pow(a.clientY, 2), 2);\n};\n\nvar norm = function norm(a) {\n  var mag = magnitude(a);\n  return {\n    clientX: a.clientX / mag,\n    clientY: a.clientY / mag\n  };\n};\n\nvar scale = function scale(a, s) {\n  return {\n    clientX: a.clientX * s,\n    clientY: a.clientY * s\n  };\n};\n\nvar add = function add(a, b) {\n  return {\n    clientX: a.clientX + b.clientX,\n    clientY: a.clientY + b.clientY\n  };\n};\n\nvar sub = function sub(a, b) {\n  return {\n    clientX: a.clientX - b.clientX,\n    clientY: a.clientY - b.clientY\n  };\n};\n\nvar painting = false;\nvar lastPaint = null;\nvar repeat = null;\ncanvas.addEventListener(\"mousedown\", function (event) {\n  event.preventDefault();\n  painting = true;\n  clearInterval(repeat);\n  repeat = window.setInterval(function () {\n    return paint(event);\n  }, 100);\n  paint(event);\n  lastPaint = event;\n});\ncanvas.addEventListener(\"mouseup\", function (event) {\n  event.preventDefault();\n  lastPaint = null;\n  clearInterval(repeat);\n  painting = false;\n});\ncanvas.addEventListener(\"mousemove\", function (event) {\n  clearInterval(repeat);\n  smoothPaint(event);\n});\ncanvas.addEventListener(\"mouseleave\", function (event) {\n  clearInterval(repeat);\n  lastPaint = null;\n});\ncanvas.addEventListener(\"touchstart\", function (event) {\n  event.preventDefault();\n  painting = true;\n  lastPaint = event;\n  handleTouches(event);\n});\ncanvas.addEventListener(\"touchend\", function (event) {\n  event.preventDefault();\n  lastPaint = null;\n  painting = false;\n  clearInterval(repeat);\n});\ncanvas.addEventListener(\"touchmove\", function (event) {\n  event.preventDefault();\n  clearInterval(repeat);\n  handleTouches(event);\n});\n\nfunction smoothPaint(event) {\n  repeat = window.setInterval(function () {\n    return paint(event);\n  }, 100);\n  var startEvent = {\n    clientX: event.clientX,\n    clientY: event.clientY\n  };\n\n  if (!painting) {\n    return;\n  }\n\n  var size = sizeMap[window.UI.state.size];\n  var i = 0;\n  paint(startEvent);\n\n  if (lastPaint) {\n    while (eventDistance(startEvent, lastPaint) > size / 2) {\n      var d = eventDistance(startEvent, lastPaint);\n      startEvent = add(startEvent, scale(norm(sub(lastPaint, event)), Math.min(size / 2, d)));\n      i++;\n\n      if (i > 1000) {\n        break;\n      }\n\n      paint(startEvent);\n    }\n  }\n\n  lastPaint = event;\n}\n\nvar handleTouches = function handleTouches(event) {\n  var touches = Array.from(event.touches);\n\n  if (touches.length == 1) {\n    smoothPaint(touches[0]);\n  } else {\n    touches.forEach(paint);\n  }\n};\n\nvar paint = function paint(event) {\n  if (!painting) {\n    return;\n  }\n\n  var boundingRect = canvas.getBoundingClientRect();\n  var scaleX = canvas.width / window.devicePixelRatio / boundingRect.width;\n  var scaleY = canvas.height / window.devicePixelRatio / boundingRect.height;\n  var canvasLeft = (event.clientX - boundingRect.left) * scaleX;\n  var canvasTop = (event.clientY - boundingRect.top) * scaleY;\n  var x = Math.min(Math.floor(canvasLeft), _index_js__WEBPACK_IMPORTED_MODULE_3__[\"width\"] - 1);\n  var y = Math.min(Math.floor(canvasTop), _index_js__WEBPACK_IMPORTED_MODULE_3__[\"height\"] - 1);\n  if (window.UI.state.selectedElement < 0) return;\n  _index_js__WEBPACK_IMPORTED_MODULE_3__[\"universe\"].paint(x, y, sizeMap[window.UI.state.size], window.UI.state.selectedElement);\n};\n\nvar ElementButton = function ElementButton(name, selectedElement, setElement) {\n  var elementID = _crate_pkg__WEBPACK_IMPORTED_MODULE_2__[\"Species\"][name];\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"button\", {\n    className: elementID == selectedElement ? \"selected\" : \"\",\n    key: name,\n    onClick: function onClick() {\n      setElement(elementID);\n    }\n  }, \"  \", name, \"  \");\n};\n\nvar sizeMap = [2, 5, 10, 18, 30, 45];\n\nvar Index =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Index, _React$Component);\n\n  function Index(props) {\n    var _this;\n\n    _classCallCheck(this, Index);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Index).call(this, props));\n    _this.state = {\n      paused: false,\n      size: 2,\n      selectedElement: _crate_pkg__WEBPACK_IMPORTED_MODULE_2__[\"Species\"].Water\n    };\n    return _this;\n  }\n\n  _createClass(Index, [{\n    key: \"playPause\",\n    value: function playPause() {\n      if (this.state.paused) {\n        Object(_index_js__WEBPACK_IMPORTED_MODULE_3__[\"renderLoop\"])();\n      } else {\n        cancelAnimationFrame(window.animationId);\n        window.animationId = null;\n      }\n\n      this.setState({\n        paused: !this.state.paused\n      });\n    }\n  }, {\n    key: \"setSize\",\n    value: function setSize(event, size) {\n      event.preventDefault();\n      this.setState({\n        size: size\n      });\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      window.confirm(\"Reset?\") && _index_js__WEBPACK_IMPORTED_MODULE_3__[\"universe\"].reset();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          size = _this$state.size,\n          paused = _this$state.paused,\n          selectedElement = _this$state.selectedElement;\n      return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this2.reset();\n        }\n      }, \"Reset\"), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this2.playPause();\n        }\n      }, paused ? \"\\u25B6\\uFE0E\" : react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"svg\", {\n        height: \"10\",\n        width: \"10\",\n        id: \"d\",\n        viewBox: \"0 0 300 300\"\n      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"polygon\", {\n        id: \"shape1\",\n        points: \"0,0 110,0 110,300 0,300\"\n      }), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"polygon\", {\n        id: \"shape2\",\n        points: \"190,0 300,0 300,300 190,300\"\n      }))), paused && react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"button\", {\n        onClick: function onClick() {\n          return _index_js__WEBPACK_IMPORTED_MODULE_3__[\"universe\"].tick();\n        }\n      }, \"Tick\"), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", null, sizeMap.map(function (v, i) {\n        return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"button\", {\n          key: i,\n          className: i == _this2.state.size ? \"selected\" : \"\",\n          onClick: function onClick(e) {\n            return _this2.setSize(e, i);\n          },\n          style: {\n            padding: \"0px\"\n          }\n        }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"svg\", {\n          height: \"24\",\n          width: \"24\",\n          id: \"d\",\n          viewBox: \"0 0 100 100\"\n        }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"circle\", {\n          cx: \"50\",\n          cy: \"50\",\n          r: 2 + v\n        })));\n      })), Object.keys(_crate_pkg__WEBPACK_IMPORTED_MODULE_2__[\"Species\"]).map(function (n) {\n        return ElementButton(n, selectedElement, function (id) {\n          return _this2.setState({\n            selectedElement: id\n          });\n        });\n      }), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"button\", {\n        className: -1 == selectedElement ? \"selected\" : \"\",\n        key: name,\n        onClick: function onClick() {\n          _this2.setState({\n            selectedElement: -1\n          });\n        }\n      }, \"Wind\"));\n    }\n  }]);\n\n  return Index;\n}(react__WEBPACK_IMPORTED_MODULE_0___default.a.Component);\n\nreact_dom__WEBPACK_IMPORTED_MODULE_1___default.a.render(react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Index, {\n  ref: function ref(UI) {\n    window.UI = UI;\n  }\n}), document.getElementById(\"ui\"));\nvar fps = new (\n/*#__PURE__*/\nfunction () {\n  function _class() {\n    _classCallCheck(this, _class);\n\n    this.fps = document.getElementById(\"fps\");\n    this.frames = [];\n    this.lastFrameTimeStamp = performance.now();\n  }\n\n  _createClass(_class, [{\n    key: \"render\",\n    value: function render() {\n      // Convert the delta time since the last frame render into a measure\n      // of frames per second.\n      var now = performance.now();\n      var delta = now - this.lastFrameTimeStamp;\n      this.lastFrameTimeStamp = now;\n      var fps = 1 / delta * 1000; // Save only the latest 100 timings.\n\n      this.frames.push(fps);\n\n      if (this.frames.length > 30) {\n        this.frames.shift();\n      } // Find the max, min, and mean of our 100 latest timings.\n\n\n      var min = Infinity;\n      var max = -Infinity;\n      var sum = 0;\n\n      for (var i = 0; i < this.frames.length; i++) {\n        sum += this.frames[i];\n        min = Math.min(this.frames[i], min);\n        max = Math.max(this.frames[i], max);\n      }\n\n      var mean = sum / this.frames.length; // Render the statistics.\n\n      this.fps.textContent = \"FPS:\".concat(Math.round(mean));\n    }\n  }]);\n\n  return _class;\n}())();\n\n\n//# sourceURL=webpack:///./js/ui.js?");

/***/ })

}]);